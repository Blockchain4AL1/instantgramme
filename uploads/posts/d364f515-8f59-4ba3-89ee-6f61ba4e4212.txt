nelson@gmail.com

nelson25





  Future<List<PostModel>> fetchPost() async {
    var loginDetails = await SharedService.loginDetails();

    Map<String, String> requestHeaders = {
      'Content-Type': 'application/x-www-form-urlencoded',
      'Authorization': 'Bearer ${loginDetails!.data.token}'
    };

    var url = Uri.parse("${Config.apiURL}${Config.listPublications}");

    final response = await client.get(
      url,
      headers: requestHeaders,
    );

    if (response.statusCode == 200) {
      List jsonResponse = json.decode(response.body);
      return jsonResponse.map((data) => PostModel.fromJson(data)).toList();
    } else {
      throw Exception('Unexpected error occured!');
    }
  }